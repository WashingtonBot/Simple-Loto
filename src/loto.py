"""Module providing a function simulating a loto \

"""

import random
# import argparse
# from create_tags import str2bool
# from create_tags import main


class LotoConstants():
    """Class for all the loto constants"""
    MAX_VALUE: int = 40
    MIN_VALUE: int = 1
    GRID_LENGTH: int = 6


def get_user_prompt() -> list[int]:
    """
    Receives an input from user and converts it as a list on integers

    Parameters:
    - None

    Returns:
    the list of integers received from the user
    """
    loto_grids_player = []
    while len(loto_grids_player) < LotoConstants.GRID_LENGTH:
        num_played = int(
            input(f"Choisissez votre prochain numéro entre {LotoConstants.MIN_VALUE}  et {LotoConstants.MAX_VALUE} : "))
        if num_played not in range(LotoConstants.MIN_VALUE, LotoConstants.MAX_VALUE+1):
            print("Erreur : Votre nombre est inférieur à 0 ou supérieur à 40")       
        elif loto_grids_player.count(num_played) > 0:
            print("Erreur : Votre nombre est double")
        else:
            loto_grids_player.append(num_played)
    return loto_grids_player


def generate_winner_list() -> set[int]:
    """
    Generates a list of integers

    Parameters:
    - None

    Returns:
    the list of integers generated
    """
    loto_grids_winner = set()
    while len(loto_grids_winner) < LotoConstants.GRID_LENGTH:
        num_generated: int = random.randint(
            LotoConstants.MIN_VALUE, LotoConstants.MAX_VALUE)
        loto_grids_winner.add(num_generated)
    return loto_grids_winner


def send_wager_answer(received_list: set[int], generated_list: set[int]):
    """
        Send the user his list and the winning list

        Parameters:
        - received_list(list) : list sent by user retrieved
                                    with the get_user_prompt() function
        - generated_list(list) : list generated by the computer
                                    with the generate_winning_list() function
        Returns:
        the list of integers generated
        """

    received_list = sorted(received_list)
    generated_list = sorted(generated_list)

    print(f"Ta liste : {received_list}")
    print(f"La liste gagnante: {generated_list}")


def answer_common_member(num_players: set[int], num_computers: set[int]):
    """
    Determines the number of winning numbers in user's list
                    and determines the amount they've won
    Parameters:
        - list_player(list) : list sent by user
                    retrieved with the get_user_prompt() function
        - list_computer(list) : list sengenerated by the computer
                    with the generate_winning_list() function
    Returns:
    A response giving the user the information according to his wager
    """

    num_players = set(num_players)
    num_computers = set(num_computers)
    loto_grids_combined = list(set(num_players.intersection(num_computers)))
    combined_list_length: int = len(loto_grids_combined)
    if combined_list_length == 0:
        print("Vous n'avez pas de numéros gagnants \n Vous avez perdu :(")
    elif combined_list_length == LotoConstants.MIN_VALUE:
        print(
            f"Vous avez {combined_list_length} numéro gagnant :"
            f"{loto_grids_combined} \n Vous gagnez 1$")
    elif combined_list_length < 4 and combined_list_length > LotoConstants.MIN_VALUE:
        print(
            f"Vous avez {combined_list_length} numéros gagnants :"
            f"{loto_grids_combined} \n Vous gagnez 5$")
    elif combined_list_length < LotoConstants.MAX_VALUE and combined_list_length > 3:
        print(
            f"Vous avez {combined_list_length} numéros gagnants :"
            f"{loto_grids_combined} \n Vous gagnez 10$")
    elif combined_list_length == LotoConstants.MAX_VALUE:
        print(
            f"Vous avez {combined_list_length} numéros gagnants :"
            f"{loto_grids_combined} \n Vous gagnez 100$ :)")


def loto():
    """
    Simulates a loto
                    -by receiving a user's list of number \
                    -and generating a winning list composed of randomly obtained number
    Parameters:
    - No Parameters
    Returns:
    The list the user composed and the one generated by the program
    """
    list_player = get_user_prompt()
    list_computer = generate_winner_list()
    send_wager_answer(list_player, list_computer)
    answer_common_member(list_player, list_computer)


loto()

#########################
